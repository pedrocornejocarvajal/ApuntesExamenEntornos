-------------------------------------------PREGUNTAS PARA EXAMEN FINAL ENTORNOS DE DESARROLLO-------------------------------------------------------

- Diferencias entre prueba de caja negra y caja blanca
    - Caja negra se prueba con solo el nombre(entradas y salidas) y caja blanca se prueba el código desde dentro en su máximo porcentaje.

- ¿Cuál es la estrategia de prueba para una estructura iterativa?
    - Bucles.

- ¿Cuál es la estrategia para una estructura selectiva?
    - Selecciones(if, switch)

- Poner fragmento, y después preguntar fragmento (sobre esta estructura selectiva explicar que pruebas de caja blanca has de diseñar)
    - Yo haría una pde caja blanca, haría todas las combinaciones (falso, true + true y true + false, false)

- Estrategia caja blanca: TODAS LAS COMBINACIONES

- Estrategia caja negra:
    - Nombre de fichero que no exista (sin ver el código, pasar combinaciones de parámetros)
    - VALORES EXTREMOS --> Los dos positivos o negativos EJ: cadena coge texto por trozos (pruebas: poner más espacios, poner un tabulador)

- ¿Qué pruebas harías mínimamente de caja blanca en una iterativa?
    - Que entre 0 veces y varias en el bucle

- ¿Qué significa cobertura de código y para qué sirve?
    - La cobertura de código es una medida porcentual en las pruebas de software que mide el grado en que el código fuente de un programa ha sido comprobado.
    - Es comúnmente utilizada en pruebas de caja blanca, como las pruebas unitarias, en las que sí se tiene acceso al código y estructura del software que se está testeando.

- Comente las siguientes frases:
    - Cuando se diseñan las pruebas unitarias, es posible siempre hacer el 100% de cobertura de código
        +Falso
            -Porque la prueba es muy compleja y no te merece la pena o porque no siempre puedas llegar al 100% por el diseño del código
    - Si tengo una cobertura del 100%, puedo asegurar que mi programa está libre de errores
        +Falso:
            -Porque puede haber combinaciones de valores que haga que las pruebas fallen y no las hayas contemplado

- Otra forma de comprobar el test sería probar a cambiar el código del programa, y si pasa aun así las pruebas, las pruebas están mal hechas